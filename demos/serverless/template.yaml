AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Amazon Chime SDK Meeting Demo
Parameters:
  UseEventBridge:
    Description: Use EventBridge to process server side notifications
    Default: false
    Type: String
    AllowedValues: [true, false]
  ControlRegion:
    Description: The AWS SDK Chime ControlRegion
    Default: "us-east-1"
    Type: String
  UseChimeSDKMeetings:
    Description: Use boolean to switch between Chime and ChimeSDKMeetings Client
    Default: true
    Type: String
    AllowedValues: [true, false]
  ChimeEndpoint:
    Description: The AWS SDK Chime endpoint
    Default: "https://service.chime.aws.amazon.com"
    Type: String
  ChimeServicePrincipal:
    Description: "The principal that will capture to the S3 bucket"
    Default: "chime.amazonaws.com"
    Type: String
  ChimeSDKMeetingsEndpoint:
    Description: The AWS Chime SDK Meetings endpoint
    Default: "https://service.chime.aws.amazon.com"
    Type: String
  UseFetchCredentialLambda:
    Description: Set to true to deploy a lambda to return AWS credentials with limited privileges. This should be disabled in most demo.
    Default: false
    Type: String
    AllowedValues: [ true, false ]
  MediaPipelinesControlRegion:
    Description: The AWS SDK Chime Media Pipelines control REGION
    Default: "us-east-1"
    Type: String
  ChimeSDKMediaPipelinesEndpoint:
    Description: The AWS Chime SDK Media Pipelines endpoint
    Default: "https://media-pipelines-chime.us-east-1.amazonaws.com"
    Type: String
  UseChimeSDKMediaPipelines:
    Description: Use boolean to switch between Chime and ChimeSDKMediaPipelines Client
    Default: true
    Type: String
    AllowedValues: [ true, false ]

Conditions:
  ShouldUseEventBridge: !Equals [true, !Ref UseEventBridge]
  ShouldDeployFetchCredentialLambda: !Equals [true, !Ref UseFetchCredentialLambda]
Globals:
  Function:
    Runtime: nodejs14.x
    Timeout: 30
    MemorySize: 128
    Environment:
      Variables:
        MEETINGS_TABLE_NAME: !Ref Meetings
        SQS_QUEUE_ARN: !GetAtt MeetingNotificationsQueue.Arn
        CHIME_ENDPOINT: !Ref ChimeEndpoint
        CONTROL_REGION: !Ref ControlRegion
        USE_CHIME_SDK_MEETINGS: !Ref UseChimeSDKMeetings
        CHIME_SDK_MEETINGS_ENDPOINT: !Ref ChimeSDKMeetingsEndpoint
        MEDIA_PIPELINES_CONTROL_REGION: !Ref MediaPipelinesControlRegion
        USE_CHIME_SDK_MEDIA_PIPELINES: !Ref UseChimeSDKMediaPipelines
        CHIME_SDK_MEDIA_PIPELINES_ENDPOINT: !Ref ChimeSDKMediaPipelinesEndpoint
        AWS_ACCOUNT_ID: !Sub "${AWS::AccountId}"
Resources:

  ChimeMeetingsAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ChimeMeetingsAccess
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'chime:CreateMeeting'
              - 'chime:TagMeeting'
              - 'chime:TagResource'
              - 'chime:DeleteMeeting'
              - 'chime:GetMeeting'
              - 'chime:ListMeetings'
              - 'chime:BatchCreateAttendee'
              - 'chime:CreateAttendee'
              - 'chime:DeleteAttendee'
              - 'chime:GetAttendee'
              - 'chime:ListAttendees'
              - 'chime:StartMeetingTranscription'
              - 'chime:StopMeetingTranscription'
              - 'chime:CreateMediaCapturePipeline'
              - 'chime:DeleteMediaCapturePipeline'
              - 'chime:CreateMediaConcatenationPipeline'
              - 's3:GetBucketPolicy'
              - 's3:GetBucketLocation'
            Resource: '*'
      Roles:
        - Ref: ChimeSdkJoinLambdaRole
        - Ref: ChimeSdkEndLambdaRole
        - Ref: ChimeSdkDeleteAttendeeLambdaRole
        - Ref: ChimeSdkStartTranscriptionLambdaRole
        - Ref: ChimeSdkStopTranscriptionLambdaRole
        - Ref: ChimeSdkStartCaptureLambdaRole
        - Ref: ChimeSdkEndCaptureLambdaRole
  Meetings:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Title"
          AttributeType: "S"
        - AttributeName: "Passcode"
          AttributeType: "S"
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: "Title"
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: "Passcode"
          KeySchema:
            - AttributeName: "Passcode"
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: "TTL"
        Enabled: true
  ChimeKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Custom KMS Key with Chime access
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Allow access for Chime Service
          Effect: Allow
          Principal:
            Service: !Ref ChimeServicePrincipal
          Action:
            - kms:GenerateDataKey
            - kms:Decrypt
          Resource: '*'
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: '*'
  ChimeKMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/ChimeKMS-${AWS::StackName}
      TargetKeyId:
        Ref: ChimeKMSKey
  MeetingNotificationsQueue:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Sub alias/ChimeKMS-${AWS::StackName}
  ChimeArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  ChimeBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ChimeArtifactsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:GetObject'
              - 's3:ListBucket'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref ChimeArtifactsBucket
                - /*
            Principal:
              Service:
                - mediapipelines.chime.amazonaws.com
  MediaPipelineServiceLinkRole:
    Type: AWS::IAM::ServiceLinkedRole
    Properties:
      AWSServiceName: mediapipelines.chime.amazonaws.com
  TranscriptionServiceLinkRole:
    Type: AWS::IAM::ServiceLinkedRole
    Properties:
      AWSServiceName: transcription.chime.amazonaws.com
  ChimeSdkJoinLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.join
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Meetings
      Environment:
        Variables:
          USE_EVENT_BRIDGE: !Ref UseEventBridge
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /join
            Method: POST
  ChimeSdkDeleteAttendeeLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.deleteAttendee
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Meetings
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /deleteAttendee
            Method: POST
  ChimeSdkEndLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.end
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Meetings
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /end
            Method: POST
  ChimeSdkStartCaptureLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.start_capture
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Meetings
      Environment:
        Variables:
          USE_EVENT_BRIDGE: !Ref UseEventBridge
          CAPTURE_S3_DESTINATION: !Ref ChimeArtifactsBucket
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /startCapture
            Method: POST
  ChimeSdkEndCaptureLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.end_capture
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Meetings
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /endCapture
            Method: POST
  ChimeSQSQueueLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.sqs_handler
      CodeUri: src/
      Events:
        MeetingNotificationsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MeetingNotificationsQueue.Arn
            BatchSize: 10
      Policies:
        - Statement:
          - Sid: ChimeSQSQueueLambdaPolicy
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: '*'
  ChimeEventBridgeLambda:
    Type: AWS::Serverless::Function
    Condition: ShouldUseEventBridge
    Properties:
      Handler: handlers.event_bridge_handler
      CodeUri: src/
      Events:
        ChimeEventBridgeEvent:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
                - aws.chime
              detail-type:
                - "Chime Meeting State Change"
  ChimeSdkStartTranscriptionLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.start_transcription
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Meetings
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /start_transcription
            Method: POST
  ChimeSdkStopTranscriptionLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.stop_transcription
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Meetings
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /stop_transcription
            Method: POST
  ChimeNotificationsQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:GetQueueUrl
            Principal:
              Service:
                - !Ref ChimeServicePrincipal
            Resource: !GetAtt MeetingNotificationsQueue.Arn
      Queues:
        - Ref: MeetingNotificationsQueue
Outputs:
  ApiURL:
    Description: "API endpoint URL for Prod environment"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
